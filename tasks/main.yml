---
- name: Load project variables
  include_vars: "{{ project_vars_file }}"
  tags: [ site, always ]


- name: Check that running all tasks
  command: /bin/true
  changed_when: False
  tags: [ dns_trigger ] # выполнится без указания тегов
  register: p_register_running_all


- import_tasks: 1-0-vm.yml
  tags: [ site, vm ] # never тег не катит, т.к. ломает --list-tags
  when: p_vm is defined and p_register_running_all is not defined



- include: 1-1-user.yml

- import_tasks: 1-2-dns.yml
  tags: [ site, dns ] # never тег не катит, т.к. ломает --list-tags
  when: p_domains is defined and p_register_running_all is not defined

- include_tasks: 1-3-letsencrypt.yml
  tags: [ site, letsencrypt, ssl ]
  when: domain.acmesh_domains is defined # and p_nginx_docker
  with_items: "{{ p_domains }}"
  loop_control:
    loop_var: domain


- include: 2-1-config.yml

- import_tasks: 2-2-nginx.yml
  tags: [ config, nginx ] # never тег не катит, т.к. ломает --list-tags

# TODO: чем include отличается от import_tasks?
- import_tasks: 2-3-cron.yml
  tags: [ cron ]

- name: Install docker packages (pip)
  pip:
    name: docker
    state: present
  become: true
  tags: [docker]

- include_tasks: 2-4-compose-deploy.yml
  when: p_compose is defined

- include: init-db.yml
  when: p_register_running_all is not defined
  tags: [ init-db ]


- name: "Instance information"
  debug:
    msg: |
      ************************************

      Domains:
      {% for domain in p_domains %}https://{{ domain.domain }}
      {% endfor %}

      {% if p_update_sh is defined and p_update_sh is changed %}update.sh changes:
      {{ p_update_sh.stdout_lines | select('match', '^(Creating|Recreating|Starting).*') | list | join('\n') | indent(4) }}

      {% endif %}
      ************************************
  changed_when: p_update_sh is defined and p_update_sh is changed
  tags: [ always, info, skip_ansible_lint, print_action ]
