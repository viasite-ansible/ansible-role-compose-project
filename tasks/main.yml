---
- name: Load project variables
  include_vars: "{{ project_vars_file }}"
  tags: [ always ]

- name: Check that running all tasks
  command: /bin/true
  changed_when: False
  tags: [ dns_trigger ] # выполнится без указания тегов
  register: p_register_running_all


- import_tasks: 1-0-vm.yml
  tags: [ vm ] # never тег не катит, т.к. ломает --list-tags
  when: p_vm is defined and p_register_running_all is not defined



- include_tasks: 1-1-user.yml

- import_tasks: 1-2-dns.yml
  tags: [ dns ] # never тег не катит, т.к. ломает --list-tags
  when: p_domains is defined and p_register_running_all is not defined

- include_tasks: dns_zone_cloudflare.yml
  with_items: "{{ p_cf_zones }}"
  #  when: domain.provider == "cloudflare" and domain.records is defined
  tags: [ dns, cf ] # never тег не катит, т.к. ломает --list-tags
  when: p_cf_zones is defined and p_register_running_all is not defined
  loop_control:
    loop_var: domain

- include_tasks: 1-3-letsencrypt.yml
  when: domain.acmesh_domains is defined and domain.provider is defined # and p_nginx_docker
  with_items: "{{ p_domains }}"
  loop_control:
    loop_var: domain
  tags: [ letsencrypt, ssl ]


- include_tasks: 2-1-config.yml
  tags: [ config, config-docker-compose, readme ]

- include_tasks: 2-2-nginx.yml
  when: domain_raw.acmesh_domains is defined or domain_raw.ssl is defined
  with_items: "{{ p_domains }}"
  loop_control:
    loop_var: domain_raw
  tags: [ config, nginx, git ] # never тег не катит, т.к. ломает --list-tags

- name: "{{ domain.domain}} : Ensure Diffie-Helmann parameters dhparam.pem exists when ssl site provisioned"
  command: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
  args:
    creates: /etc/ssl/certs/dhparam.pem
  when: p_ssl
  tags: [ config, nginx ]

- import_tasks: 2-3-php.yml
  when: p_nginx_backend == 'apache'
  tags: [ php ]

- include_tasks: 2-4-apache.yml
  when: p_nginx_backend == 'apache' and domain_raw.acmesh_domains is defined or domain_raw.ssl is defined
  with_items: "{{ p_domains }}"
  loop_control:
    loop_var: domain_raw
  tags: [ apache, apache_vhosts ]

# TODO: чем include отличается от import_tasks?
- import_tasks: 3-1-cron.yml
  tags: [ cron ]

- name: Install docker packages (pip)
  pip:
    name: docker
    state: present
  become: true
  when: ansible_distribution_version is version_compare('24.04', '<') # externally-managed-environment
  tags: [ docker ]

- include_tasks: 4-1-compose-deploy.yml
#  when: p_compose is defined and p_compose
  tags: [ deploy, docker ]

- include_tasks: init-db.yml
  when: p_register_running_all is not defined
  tags: [ init-db ]


- name: "Instance information"
  debug:
    msg: |
      
      ************************************

      Domains:
      {% for domain in p_domains if 'acmesh_domains' in domain or 'ssl' in domain %}http{% if not 'ssl' in domain or domain.ssl %}s{% endif %}://{{ domain.domain }}
      {% endfor %}

      {% if p_compose_version %} 
      {{ p_register_update_sh.stdout_lines | select('match', 'Version:.*') | list | join('\n') | indent(4) }}
      {% endif %}
      
      {% if p_register_update_sh is defined and p_register_update_sh is changed %}update.sh changes:
      {{ p_update_sh.stdout_lines | select('match', '.*(Created|Recreated)') | list | join('\n') | indent(4) }}

      {% endif %}
      ************************************
  changed_when: p_register_update_sh is defined and p_register_update_sh is changed
  tags: [ always, info, skip_ansible_lint, print_action ]
