---
p_name: # project machine name

# gitlab deploy key
p_gitlab_registry: registry.gitlab.com
p_gitlab_user:
p_gitlab_password:

p_is_test: no # для тестового сайта добавляется блокирующий robots.txt

p_compose: # docker-compose.yml content
p_compose_pull: # pull only these services

p_domain: "{{ p_domains[0].domain }}"
p_domains_secondary: []
# www p_domain will be added automatically
p_domains_redirected: "{% if 'redirected' in p_domains[0] %}{{ p_domains[0].redirected }}{% else %}[]{% endif %}"
p_domains_remove: []

p_domains: []
p_dirs: []

p_dns_provider: cloudflare # или selectel
p_dns_selectel_token: # для dns и letsencrypt через dns
p_dns_cloudflare_email:
p_dns_cloudflare_token: # для dns и letsencrypt через dns
#p_dns_domains:
p_dns_ttl: 3600

p_letsencrypt_acmesh_deploy_path: "{{ p_data }}/certs"
p_letsencrypt_acmesh_args: "--dns dns_cf" # или "--dns dns_selectel"
p_letsencrypt_acmesh_env: "{{ letsencrypt_acmesh_env | default('CF_Token=') }}"

p_user: deployer
p_user_group: "{{ p_user }}"

p_homedir: "/home/{{ p_user }}"
p_wwwdir: "{{ p_homedir }}/www"
p_root_public: "{{ p_wwwdir }}/{{ p_domain_main }}"

p_root: "/home/{{ p_user }}/projects/{{ p_name }}"
p_data: "{{ p_root }}/data"

p_log_root: "{{ p_root }}/log"
p_log_update: "{{ p_log_root }}/docker-compose-update.log"

p_nginx_template: # deprecated
p_nginx_config: # http or https, depends on p_ssl
p_nginx_engine: default
p_nginx_engine_server: # avoid to direct define this variable
p_nginx_backend: "{% if p_nginx_engine == 'service' %}service{% else %}apache{% endif %}"
p_nginx_http2: yes # use http2 for https sites

p_nginx_service_host: localhost

p_nginx_custom_http: "" # add after server in template
p_nginx_custom_server_before: "" # add to server in template begin
p_nginx_custom_server: "" # add to server in template end
p_nginx_custom_root_location: "" # add to location / in template
#apache_mpm_itk_max_clients_per_host: 30


p_ssl: yes
p_ssl_certificate: "{{ p_letsencrypt_acmesh_deploy_path }}/{{ p_domains[0].acmesh_domains[0] }}.fullchain"
p_ssl_certificate_key: "{{ p_letsencrypt_acmesh_deploy_path }}/{{ p_domains[0].acmesh_domains[0] }}.key"
p_ssl_hsts: yes
p_ssl_redirect_main_domain: yes
p_ssl_redirect_code: 301



p_dns_ip: "{{ ansible_default_ipv4.address }}"

p_setup_git: True # настроит git
p_setup_ssh_keys: True # пропишет ssh ключи
p_setup_zsh: False # настроит zsh терминал для юзера p_user
p_user_zsh_template: user/zshrc.j2
p_force_zshrc: False # перезапись ~/.zshrc
p_nginx_docker: True # nginx в докере или внешний

#p_cron_tasks:
#  - name: "remove api uploads cache"
#    hour: 4
#    minute: 25
#    job: "rm -rf '{{ p_data }}/api/uploads/cache/*'"
#    user: root
#    state: absent

p_cron_tasks: []
p_cron_vars: []

p_nginx_location_default: |
  ## see more settings for mp3, ogg, mp4, flv at https://github.com/perusio/drupal-with-nginx

  ## Replicate the Apache <FilesMatch> directive of Drupal standard
  ## .htaccess. Disable access to any code files. Return a 404 to curtail
  ## information disclosure. Hide also the text files.
  location ~* ^(?:.+\.(?:htaccess|gitignore|make|txt|md|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
    return 404;
  }

  location ~ /\.(hg|svn|git|bzr) {
    deny all;
  }
  location /backup {
    deny all;
  }
  location /build {
    deny all;
  }
  location /logs {
    deny all;
  }
  location /patches {
    deny all;
  }
  location /tmp {
    deny all;
  }
  location /modified.txt {
    deny all;
  }

  ## Disable access logs for robots.txt.
  location = /robots.txt {
    access_log off;
  }

  ## RSS feed support.
  location = /rss.xml {
    try_files $uri @rewrite;
  }

  ## Support for favicon. Return a 204 (No Content) if the favicon
  ## doesn't exist.
  location = /favicon.ico {
    access_log off;
    try_files /favicon.ico =204;
  }

  location = /404.html {
    internal;
  }

# for insert in location /
p_nginx_location_static_files: |
  # Static files location
  location ~* ^.+\.(?:jpg|jpeg|gif|png|ico|css|less|zip|tgz|gz|rar|bz2|doc|docx|xls|xlsx|ppt|ppts|pptsx|exe|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|woff|woff2|eot|ttf|cur|svg|webp)$
  {
    access_log off;
    log_not_found off;
    expires 365d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    #try_files $uri /404.html @fallback;
  }

  ## PDFs and powerpoint files handling.
  location ~* ^.+\.(?:pdf|pptx?)$ {
    expires 30d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
  }
